import:
  - orgs/_defaults

vars:
  tenant: core
  region: us-east-1
  environment: gbl
  stage: root

components:
  terraform:
    tfstate-backend:
      backend:
        s3:
          workspace_key_prefix: "tfstate-backend"
      vars:
        name: tfstate
        # attributes: ["lenient-kingfish"]
        force_destroy: false
        prevent_unencrypted_uploads: true
        enable_server_side_encryption: true
        access_roles:
          terraform:
            write_enabled          : true
            allowed_roles          :
              identity:
                - admin
            denied_roles           : {}
            allowed_principal_arns :
              - arn:aws:iam::805045230494:user/Ilia_Zlobin@org.com
            denied_principal_arns  : []
            allowed_permission_sets: {}
            denied_permission_sets : {}
        # access_roles_enabled: false
    account:
      vars:
        organization_enabled: false # Do not create organization but rather import
        account_email_format: SharedEPM-AODP%sSandboxes@org.com
        account_iam_user_access_to_billing: DENY
        aws_service_access_principals:
          - cloudtrail.amazonaws.com
          - ram.amazonaws.com
        enabled_policy_types:
          - SERVICE_CONTROL_POLICY
          - TAG_POLICY
        service_control_policies_config_paths:
          # These paths specify where to find the service control policies identified by SID in the service_control_policies sections above.
          # The number such as "0.12.0" is the release number/tag of the service control policies repository, and you may want to
          # update it to reflect the latest release.
          - "https://raw.githubusercontent.com/cloudposse/terraform-aws-service-control-policies/0.12.0/catalog/organization-policies.yaml"
          - "https://raw.githubusercontent.com/cloudposse/terraform-aws-service-control-policies/0.12.0/catalog/ec2-policies.yaml"
          - "https://raw.githubusercontent.com/cloudposse/terraform-aws-service-control-policies/0.12.0/catalog/cloudwatch-logs-policies.yaml"
          - "https://raw.githubusercontent.com/cloudposse/terraform-aws-service-control-policies/0.12.0/catalog/deny-all-policies.yaml"
          - "https://raw.githubusercontent.com/cloudposse/terraform-aws-service-control-policies/0.12.0/catalog/iam-policies.yaml"
          - "https://raw.githubusercontent.com/cloudposse/terraform-aws-service-control-policies/0.12.0/catalog/kms-policies.yaml"
          - "https://raw.githubusercontent.com/cloudposse/terraform-aws-service-control-policies/0.12.0/catalog/route53-policies.yaml"
          - "https://raw.githubusercontent.com/cloudposse/terraform-aws-service-control-policies/0.12.0/catalog/s3-policies.yaml"
        organization_config:
          root_account:
              name: root
          root_account_stage_name: "root"
          accounts: []
          organization:
            service_control_policies: []
          organizational_units:
            - name: core
              accounts:
                - name: identity # 523031946048
                  tags:
                    eks: false
                - name: dns
                  aws_name: Dns
                  email: SharedEPM-AODPDnsSandboxes@org.com
                  tags:
                    eks: false
                - name: network
                  tags:
                    eks: false
                - name: audit
                  aws_name: Audit
                  email: SharedEPM-AODPAuditSandboxes@org.com
                  tags:
                    eks: false
                # - name: security
                #   tags:
                #     eks: false
                # - name: observability
                #   tags:
                #     eks: false
                # - name: automation
                #   tags:
                #     eks: true
            - name: corp
              accounts:
                # www.org.com (https://telescope.org.com/projects/profile/974b3901-178f-4083-b286-a6913623ef47)
                - name: epm-web-prod # deprecated
                  tenant: epm-web
                  stage: prod
                  tags:
                    eks: true
                - name: epmweb-prod # _____
                  tenant: epmweb
                  stage: prod
                  tags:
                    eks: true
                - name: epmweb-prod # _____
                  tenant: epmweb
                  stage: prod
                  tags:
                    eks: true
                # - name: epmweb-staging
                #   tags:
                #     eks: true
                # telescope/upsa (https://telescope.org.com/projects/profile/e7ebdf3f-67ac-4a24-bff9-ff3f4481e74e)
                - name: epme3s-prod # 887322097677
                  tenant: epme3s
                  stage: prod
                  tags:
                    eks: true
                # - name: epmai-prod # ___
                #   tenant: epmai
                #   stage: prod
                #   tags:
                #     eks: true
                # learn.org.com (https://telescope.org.com/projects/profile/fa24f3ea-e557-454d-bcfe-9970e086de2e)
                # - name: epmtmc-prod
                #   tags:
                #     eks: true
                # competency.org.com (https://telescope.org.com/projects/profile/deac782c-051f-419e-8f56-8ec42d899437)
                # - name: epmcomp-prod
                #   tags:
                #     eks: false
            # - name: tenants
            #   accounts:
            #     - name: onsolve
            #       tags:
            #         eks: false
            #     - name: ricston
            #       tags:
            #         eks: false
    account-map:
      vars:
        enabled: true
        # Set profiles_enabled to false unless we are using AWS config profiles for Terraform access.
        # When profiles_enabled is false, role_arn must be provided instead of profile in each terraform component provider.
        # This is automatically handled by the component's `provider.tf` file in conjunction with
        # the `account-map/modules/iam-roles` module.
        profiles_enabled: false
        root_account_aws_name: "ORG: EPM-AODP-ORG"
        full_account_remap:
          "ORG: EPM-AODP-ORG": root
          Dns: dns
          Audit: audit
        root_account_account_name: root
        identity_account_account_name: identity
        dns_account_account_name: dns
        audit_account_account_name: audit
        exclude_accounts:
          - "Log Archive"

        # The following variables contain `format()` strings that take the labels from `null-label`
        # as arguments in the standard order. The default values are shown here, assuming
        # the `null-label.label_order` is
        # ["namespace", "tenant", "environment", "stage", "name", "attributes"]
        # Note that you can rearrange the order of the labels in the template by
        # using [explicit argument indexes](https://pkg.go.dev/fmt#hdr-Explicit_argument_indexes) just like in `go`.

        #  `iam_role_arn_template_template` is the template for the template [sic] used to render Role ARNs.
        #  The template is first used to render a template for the account that takes only the role name.
        #  Then that rendered template is used to create the final Role ARN for the account.
        iam_role_arn_template_template: "arn:%s:iam::%s:role/%s-%s-%s-%s-%%s"
        # `profile_template` is the template used to render AWS Profile names.
        profile_template: "%s-%s-%s-%s-%s"
